// Code generated by github.com/99designs/gqlgen, DO NOT EDIT.

package model

import (
	"time"
)

type AddCommentInput struct {
	PostID  int64  `json:"postId"`
	Content string `json:"content"`
	Author  string `json:"author"`
}

type AddPostInput struct {
	Title         string `json:"title"`
	Content       string `json:"content"`
	Author        string `json:"author"`
	AllowComments bool   `json:"allowComments"`
}

type AddReplyInput struct {
	CommentID int64  `json:"commentId"`
	PostID    int64  `json:"postId"`
	Content   string `json:"content"`
	Author    string `json:"author"`
}

type Comment struct {
	ID        int64     `json:"id"`
	Content   string    `json:"content"`
	Author    string    `json:"author"`
	CreatedAt time.Time `json:"createdAt"`
	ReplyTo   *int64    `json:"reply_to,omitempty"`
}

type CommentConnection struct {
	Edges    []CommentEdge `json:"edges"`
	PageInfo PageInfo      `json:"pageInfo"`
}

type CommentEdge struct {
	Cursor string  `json:"cursor"`
	Node   Comment `json:"node"`
}

type Mutation struct {
}

type PageInfo struct {
	HasNextPage bool   `json:"hasNextPage"`
	StartCursor string `json:"startCursor"`
	EndCursor   string `json:"endCursor"`
}

type Post struct {
	ID            int64             `json:"id"`
	Title         string            `json:"title"`
	Content       string            `json:"content"`
	Author        string            `json:"author"`
	CreatedAt     time.Time         `json:"createdAt"`
	AllowComments bool              `json:"allowComments"`
	Comments      CommentConnection `json:"comments"`
}

type PostConnection struct {
	Edges    []PostEdge `json:"edges"`
	PageInfo PageInfo   `json:"pageInfo"`
}

type PostEdge struct {
	Cursor string `json:"cursor"`
	Node   Post   `json:"node"`
}

type Query struct {
}

type Subscription struct {
}
